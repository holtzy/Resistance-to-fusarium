RowSideColors=allele,
col = coul
)
distance <- function(x) as.dist(1-cor(t(x)))
hclust.ave <- function(x) hclust(x, method="ward.D")
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
allele=as.numeric(as.factor(tmp$`Traes_1BS_B9CBEFAE5@1271`))
allele=brewer.pal(nlevels(as.factor(allele)), "Set2")[allele]
distance <- function(x) as.dist(1-cor(t(x)))
hclust.ave <- function(x) hclust(x, method="ward.D")
coul = colorRampPalette(brewer.pal(8, "PiYG"))(5)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
metabomoynorm=t(scale(t(as.matrix(metabomoy))))
famille=as.numeric(as.factor(nature))[-1]
famille=brewer.pal(4, "Set1")[famille]
tmp=geno[match( rownames(metabomoynorm) , geno$geno) , ]
allele=as.numeric(as.factor(tmp$`Traes_1BS_B9CBEFAE5@1271`))
allele=brewer.pal(nlevels(as.factor(allele)), "Set2")[allele]
distance <- function(x) as.dist(1-cor(t(x)))
hclust.ave <- function(x) hclust(x, method="ward.D")
coul = colorRampPalette(brewer.pal(8, "PiYG"))(5)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
metabomoynorm=scale(as.matrix(metabomoy))
famille=as.numeric(as.factor(nature))[-1]
famille=brewer.pal(4, "Set1")[famille]
tmp=geno[match( rownames(metabomoynorm) , geno$geno) , ]
allele=as.numeric(as.factor(tmp$`Traes_1BS_B9CBEFAE5@1271`))
allele=brewer.pal(nlevels(as.factor(allele)), "Set2")[allele]
distance <- function(x) as.dist(1-cor(t(x)))
hclust.ave <- function(x) hclust(x, method="ward.D")
coul = colorRampPalette(brewer.pal(8, "PiYG"))(5)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
metabomoynorm=scale(as.matrix(metabomoy))
metabomoynorm=t(scale(t(metabomoynorm)))
famille=as.numeric(as.factor(nature))[-1]
famille=brewer.pal(4, "Set1")[famille]
tmp=geno[match( rownames(metabomoynorm) , geno$geno) , ]
allele=as.numeric(as.factor(tmp$`Traes_1BS_B9CBEFAE5@1271`))
allele=brewer.pal(nlevels(as.factor(allele)), "Set2")[allele]
distance <- function(x) as.dist(1-cor(t(x)))
hclust.ave <- function(x) hclust(x, method="ward.D")
coul = colorRampPalette(brewer.pal(8, "PiYG"))(5)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
allele=as.numeric(as.factor(tmp$`Traes_5AL_99116D900@696`))
allele=brewer.pal(nlevels(as.factor(allele)), "Set2")[allele]
distance <- function(x) as.dist(1-cor(t(x)))
hclust.ave <- function(x) hclust(x, method="ward.D")
coul = colorRampPalette(brewer.pal(8, "PiYG"))(5)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "PiYG"))(3)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "PiYG"))(2)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "PiYG"))(4)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "PiYG"))(3)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "PiYG"))(33)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "Set1"))(33)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "Set2"))(33)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "Set3"))(33)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
coul = colorRampPalette(brewer.pal(8, "Spectral"))(33)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
tmp=geno[match( rownames(metabomoynorm) , geno$geno) , ]
allele=as.numeric(as.factor(tmp$`Traes_1BS_B9CBEFAE5@1271`))
allele=brewer.pal(nlevels(as.factor(allele)), "Set1")[allele]
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=famille,
RowSideColors=allele,
col = coul
)
write.table(summary_QTL_13, file="../../SUPPORTING_DATA/OR_detail_all_QTLs.csv", col.names = TRUE, row.names=FALSE)
write.table(summary_QTL_13, file="../../../SUPPORTING_DATA/OR_detail_all_QTLs.csv", col.names = TRUE, row.names=FALSE)
write.table(summary_QTL_13, file="../../../SUPPORTING_DATA/OR_detail_all_QTLs_metabo.csv", col.names = TRUE, row.names=FALSE)
write.table(summary_QTL_13, file="../../../SUPPORTING_DATA/OR_detail_all_QTLs_metabo.csv", col.names = TRUE, row.names=FALSE, quote=FALSE)
QTL_metabo=read.table(file="../../../SUPPORTING_DATA/OR_detail_all_QTLs_metabo.csv", col.names=T)
QTL_metabo=read.table(file="../../../SUPPORTING_DATA/OR_detail_all_QTLs_metabo.csv", col.names=T, sep=";")
QTL_metabo
QTL_metabo=read.table(file="../../../SUPPORTING_DATA/OR_detail_all_QTLs_metabo.csv", col.names=T, sep=" ")
write.table(summary_QTL_13, file="../../../SUPPORTING_DATA/OR_detail_all_QTLs_metabo.csv", col.names = TRUE, row.names=FALSE, quote=FALSE, sep=";")
QTL_metabo=read.table(file="../../../SUPPORTING_DATA/OR_detail_all_QTLs_metabo.csv", col.names=T, sep=";")
QTL_metabo=read.table(file="../../../SUPPORTING_DATA/OR_detail_all_QTLs_metabo.csv", header=T, sep=";")
QTL_metabo
subset(QTL_metabo,
head(QTL_metabo)
subset(QTL_metabo,
head(QTL_metabo)
subset(QTL_metabo, chromo="1B")
subset(QTL_metabo, chromo="1B")$carac
QTL_metabo %>% filter(chromo=="1B")
QTL_metabo %>% filter(chromo=="1B") %>% select(carac)
QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>% gsub("_blup13","")
QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>% gsub("_blup13","",.)
QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>% gsub("_blup13","")
QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>%  mutate(carac = gsub("_blup13","",carac)
subset(QTL_metabo, chromo="1B")$carac
QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>%  mutate(carac = gsub("_blup13","",carac))
with_QTL=QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>%  mutate(carac = gsub("_blup13","",carac))
length(with_QTL)
with_QTL=QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>%  mutate(carac = gsub("_blup13","",carac))
with_QTL=QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>%  mutate(carac = gsub("_blup13","",carac)) %>% as.vector
length(with_QTL)
with_QTL
colnames(metabo) %in% with_QTL
colnames(metabo)
with_QTL
colnames(metabo)
colnames(metabo) %in% with_QTL[,1]
which(colnames(metabo) %in% with_QTL[,1])
colnames(metabo) %in% with_QTL[,1]
as.numeric(colnames(metabo) %in% with_QTL[,1])
as.numeric(colnames(metabo) %in% with_QTL[,1])[-1]
with_QTL=QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>%  mutate(carac = gsub("_blup13","",carac))
QTL=as.numeric(colnames(metabo) %in% with_QTL[,1])[-1]
QTL=brewer.pal(2, "Set1")[QTL]
QTL
QTL=as.numeric(colnames(metabo) %in% with_QTL[,1])[-1]
QTL
QTL=as.numeric(colnames(metabo) %in% with_QTL[,1])[-1] +1
QTL=brewer.pal(2, "Set1")[QTL]
QTL
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=QTL,
RowSideColors=allele,
col = coul
)
heatmap.2(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=QTL,
RowSideColors=allele,
col = coul
)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=QTL,
RowSideColors=allele,
col = coul
)
metabomoynorm=scale(as.matrix(log(metabomoy)))
metabomoynorm=t(scale(t(metabomoynorm)))
famille=as.numeric(as.factor(nature))[-1]
famille=brewer.pal(4, "Set1")[famille]
with_QTL=QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>%  mutate(carac = gsub("_blup13","",carac))
QTL=as.numeric(colnames(metabo) %in% with_QTL[,1])[-1] +1
QTL=brewer.pal(2, "Set1")[QTL]
with_QTL=QTL_metabo %>% filter(chromo=="1B") %>% select(carac) %>%  mutate(carac = gsub("_blup13","",carac))
QTL=as.numeric(colnames(metabo) %in% with_QTL[,1])[-1] +1
QTL=brewer.pal(2, "Set1")[QTL]
table(geno[,c(2,4)])
tmp=geno[match( rownames(metabomoynorm) , geno$geno) , ]
allele=as.numeric(as.factor(tmp$`Traes_1BS_B9CBEFAE5@1271`))
allele=brewer.pal(nlevels(as.factor(allele)), "Set1")[allele]
distance <- function(x) as.dist(1-cor(t(x)))
hclust.ave <- function(x) hclust(x, method="ward.D")
coul = colorRampPalette(brewer.pal(8, "Spectral"))(33)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=QTL,
RowSideColors=allele,
col = coul
)
metabomoynorm
metabomoy=log(metabomoy+1)
metabomoynorm=scale(as.matrix(metabomoy))
metabomoynorm=t(scale(t(metabomoynorm)))
distance <- function(x) as.dist(1-cor(t(x)))
hclust.ave <- function(x) hclust(x, method="ward.D")
coul = colorRampPalette(brewer.pal(8, "Spectral"))(33)
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=QTL,
RowSideColors=allele,
col = coul
)
metabomoy=log10(metabomoy+1)
metabomoynorm=scale(as.matrix(metabomoy))
metabomoynorm=t(scale(t(metabomoynorm)))
heatmap(as.matrix(metabomoynorm),
scale="none" ,
distfun=distance,
hclustfun=hclust.ave,
ColSideColors=QTL,
RowSideColors=allele,
col = coul
)
load("/Users/yan/Dropbox/Publi_Fusariose/ANALYSIS_REPRO/DATA/QTL_R_environment.R")
par(mfrow=c(1,1))
my_var_to_show=PUBLI
show_IC_QTL_on_map(data, my_var_to_show , c("1B", "5A"), my_QTL_thres , 1.5)
png("~/Dropbox/Publi_Fusariose/FIGURE/Fig_IC_QTL_on_map.png")
show_IC_QTL_on_map(data, my_var_to_show , c("1B", "5A"), my_QTL_thres , 1.5)
max_lod_1B=find_LOD_max( "1B", 0, 9 )
find_LOD_max=function( chromo, my_min, my_max   ){
bilan=data.frame(matrix(0, 200  ,8))
num=0
vec_names=c("NOT", "PEPI", "NEPIL", "PEPIL")
for(expe in list(CAP13, GRI11, GRI13, GRI15, LEC14, BEQ11, BAR14)){
num_carac=0
for(carac in list(NOT, PEPI, NEPIL, PEPIL)){
num_carac=num_carac+1
my_carac=intersect(BLUP, intersect(expe, carac ))
if( expe==BEQ11){ my_carac=intersect(expe, carac ) }
if( length(my_carac)==0) { next }
num=num+1
my_vec=c()
for(i in c(1:length(my_carac))){
b=(data$LOD[ which(data$LG==chromo & data$variable==my_carac[i] & data$Distance<my_max & data$Distance>my_min ) ])
a=max( b , na.rm=T)
my_vec=c(my_vec, a)
}
my_replace=c( unique(gsub("_.*","",my_carac)) , vec_names[num_carac], my_vec )
bilan[num, c(1:length(my_replace)) ] = my_replace
}
}
bilan=bilan[bilan[,1]!=0 , ]
bilan[bilan==0]=NA
return(bilan)
}
show_max_LOD=function(bilan){
# Préparation des axes des X.
x1=c("300", "400", "550", "AUDPC")
x2=c("300", "350", "450", "500", "550", "AUDPC")
x3=c("350", "450", "550", "AUDPC")
x4=c("350", "550", "AUDPC")
x5=c("300", "400", "550", "AUDPC")
x6=c("300", "350", "450", "500", "AUDPC")
x7=c("300", "400", "550", "600", "AUDPC")
my_x_axis=list(x1,x2,x3,x4,x5,x6,x7)
par(mfrow=c(2,4) , mar=c(3,3,1,1))
liste_var=c("NOT", "PEPI","NEPIL", "PEPIL")
num=0
for(expe in list("CAP13", "GRI11", "GRI13", "GRI15", "LEC14", "BEQ11", "BAR14")){
num=num+1
AA=bilan[ which(bilan[,1]==expe),]
plot(seq(1,6) , AA[ 1, c(3:ncol(AA))] , type="l", ylim=c(0,10) , col=my_colors[match( AA[ 1, 2] , liste_var )], lwd=2, xlab=expe, ylab="", xaxt="n")
axis(1, at=seq( 1 , length(my_x_axis[[num]])), my_x_axis[[num]], cex=0.7)
abline(h=my_QTL_thres, col="grey")
abline(v=c(1:6), col="grey", lwd=0.3)
for(i in c(2:nrow(AA))){
points(seq(1,6) , AA[ i, c(3:ncol(AA))] , type="l" , col=my_colors[match( AA[ i, 2] , liste_var )], lwd=2)
}
text(x=1.8, y=9, expe, col="orange" )
}
plot(1,1,col="transparent", xaxt="n", yaxt="n", bty="n", xlab="", ylab="")
legend( "center", legend = c("NOT", "PEPI","NEPIL", "PEPIL") , bty="n", pch=20 , col=my_colors[1:4], pt.cex=4, cex=1.6 )
}
max_lod_1B=find_LOD_max( "1B", 0, 9 )
show_max_LOD(max_lod_1B)
max_lod_5A=find_LOD_max( "5A", 100, 300   )
show_max_LOD(max_lod_5A)
bil_phy=data.frame(matrix(0,0,9))
colnames(bil_phy)=c("chromo","start IC (cM)", "end IC (cM)", "len IC (cM)", "# SNP", "start IC (Mb)", "end IC (Mb)", "size IC (Mb)", "# genes")
bil_phy[1,]=find_IC_infos(1.2,14.1,"1B",c())
bil_phy
par(mfrow=c(1,2), mar=c(5,5,3,3))
show_genes_of_IC(0, 300, "1B", 0.005, 1, c())
show_genes_of_IC(0, 14, "1B", 0.5, 4, c())
bil_phy[2,]=find_IC_infos(235.6 ,305,"5A","Traes_5AL_99116D900@696")
bil_phy
par(mfrow=c(1,2), mar=c(5,5,3,3))
show_genes_of_IC(0, 400, "5A", 0.005, 1, c())
show_genes_of_IC(235.6 ,305, "5A", 0.1, 4,"Traes_5AL_99116D900@696")
bil_phy[3,]=find_IC_infos(47,53,"4B","")
bil_phy
par(mfrow=c(1,2), mar=c(5,5,3,3))
show_genes_of_IC(0, 200, "4B", 0.005, 1)
show_genes_of_IC(47, 53, "4B", 0.1, 4)
bil_phy[4,]=find_IC_infos(5,35,"7B","")
SSR=unique(data[ grep("gwm" , data$marqueur) , c(1:3) ])
nrow(SSR)
SSR
bil_inter=data.frame(matrix(0,0,9))
colnames(bil_inter)=c("trait","marker-1B", "marker 5A", "mean A-A", "mean A-B", "mean B-A", "mean B-B", "R2 tot", "pval inter")
bil_inter[1,]=analyse_inter("Cluster_16778|Contig1|original@1840", "Cluster_9940|Contig1|complementarySeq@104" , "BAR14_PEPIL300_blup")
boxplot_two_QTL_interactive("Cluster_16778|Contig1|original@1840", "Cluster_9940|Contig1|complementarySeq@104" , "BAR14_PEPIL300_blup")
boxplot_two_QTL_interactive("Cluster_16778|Contig1|original@1840", "Cluster_9940|Contig1|complementarySeq@104" , "BAR14_PEPIL300_blup")
var_with_2QTLs=c()
for(i in list(summary_QTL_NOT, summary_QTL_PEPI, summary_QTL_NEPIL, summary_QTL_PEPIL)){
a=i[which(i$chromo%in%c("1B","5A")) , ]
b=table(a$carac)
var=names(b[b==2])
var_with_2QTLs=c(var_with_2QTLs, var)
}
var_with_2QTLs=var_with_2QTLs[grep("blup",var_with_2QTLs)]
for(i in var_with_2QTLs[-which(var_with_2QTLs=="BAR14_PEPIL300_blup")]){
vv=analyse_inter("Cluster_16778|Contig1|original@1840", "Cluster_9940|Contig1|complementarySeq@104" , i)
bil_inter=rbind(bil_inter , vv)
}
#Watch out, to reproduct analysis, you have to update the path.
data=read.table("~/Dropbox/Publi_Fusariose/ANALYSIS_REPRO/DATA/PHENOTYPE/phenotypage_all_fusa.csv" , header=T , sep=";" )
#numeric
data[,-1]=apply(data[,-1],2,as.numeric)
#check no redondancy in genotype name
table(data$geno)[table(data$geno)>1]
# put geno name as rowname
rownames(data)=data$geno
data=data[,-1]
# delete columns with only NA
which(apply( data , 2 , function(x) all(is.na(x)) )==TRUE)
data=data[ , ! apply( data , 2 , function(x) all(is.na(x)) ) ]
ncol(data)-1
nrow(data)
library(RColorBrewer)
library(xtable)
library(plotly)
library(FactoMineR)
my_colors = brewer.pal(8, "Set2")
my_colors = colorRampPalette(my_colors)(15)
# reps
REP1=grep("rep1", colnames(data) )
REP2=grep("rep2", colnames(data) )
BLUP=grep("blup", colnames(data) )
# experiments
CAP13=grep("CAP13", colnames(data) )
GRI11=grep("GRI11", colnames(data) )
GRI13=grep("GRI13", colnames(data) )
GRI15=grep("GRI15", colnames(data) )
LEC14=grep("LEC14", colnames(data) )
BEQ11=grep("BEQ11", colnames(data) )
BAR14=grep("BAR14", colnames(data) )
# Type de phéno NEPI, NEPIL, PEPIL, NOT, DON
PEPIL=grep("PEPIL", colnames(data) )
PEPI=grep("PEPI", colnames(data))
PEPI=setdiff(PEPI, PEPIL)
NEPIL=grep("NEPIL", colnames(data) )
NOT=grep("NOT", colnames(data) )
DON=grep("DON", colnames(data) )
# AUDPC et derniere notation
AUDPC=grep("AUDPC", colnames(data) )
LAST=AUDPC-1
# agronomical variable
EPI=grep("_EPI" , colnames(data) )
FLO=grep("FLO" , colnames(data) )
HEI=grep("HEI" , colnames(data) )
# CAP13 --> must be 13
a=intersect(CAP13,BLUP) ; a=intersect(a,c(DON, NOT, PEPI, NEPIL, PEPIL)) ; length(a)
# GRI11 --> must be 12
a=intersect(GRI11,BLUP) ; a=intersect(a,c(DON, NOT, PEPI, NEPIL, PEPIL)) ; length(a)
# GRI13 --> must be 17
a=intersect(GRI13,BLUP) ; a=intersect(a,c(DON, NOT, PEPI, NEPIL, PEPIL)) ; length(a)
# GRI15 --> must be 12
a=intersect(GRI15,BLUP) ; a=intersect(a,c(DON, NOT, PEPI, NEPIL, PEPIL)) ; length(a)
# LEC14 --> must be 12 + DON qui n'a pas de blup=13
a=intersect(LEC14,BLUP) ; a=intersect(a,c(DON, NOT, PEPI, NEPIL, PEPIL)) ; length(a)
# BEQ11 --> must be 13
a=intersect(BEQ11,c(DON, NOT, PEPI, NEPIL, PEPIL)) ; length(a)
# BAR14 --> must be 17 / one is useless (NEPIL_blup)
a=intersect(BAR14,BLUP) ; a=intersect(a,c(DON, NOT, PEPI, NEPIL, PEPIL)) ; length(a)
A=matrix("-",5,4)
rownames(A)=c("Cappelle","Grisolles","Lectoure","Monbequi","Monbartier")
colnames(A)=c("2011", "2013", "2014","2015")
v2011=c("-","Yes","-","Yes","-")
v2013=c("Yes","Yes","-","-","-")
v2014=c("-","-","Yes","-","Yes")
v2015=c("-","Yes","-","-","-")
A[,c(1:4)]=c(v2011,v2013,v2014,v2015)
print(xtable(A), type = "html", include.rownames = T , comment=FALSE)
par(mfrow=c(5,4), mar=c(4,3,1,1))
for(i in c( intersect(NOT, REP1), intersect(NOT, BEQ11) )   ){
hist( data[,i]  ,  border=F, xlab="" , col=my_colors[6], main="", las=1)
abline( v=c( data[rownames(data)=="dic2", i], data[rownames(data)=="silur", i]), col=c("blue","red") , lwd=2)
a=gsub("_rep1", "", colnames(data)[i])
a=paste(a, " | ", round(mean(data[,i],na.rm=T),2), sep="")
title( a , col.main="blue" , cex.main=0.7)
}
BLUP
intersect(NOT, BLUP)
par(mfrow=c(4,4), mar=c(4,3,1,1))
intersect(NOT, BLUP)
i=78
hist( data[,i]  ,  border=F, xlab="" , col=my_colors[6], main="", las=1)
abline( v=c( data[rownames(data)=="dic2", i], data[rownames(data)=="silur", i]), col=c("blue","red") , lwd=2)
hist( data[,i]  ,  border=F, xlab="" , col=my_colors[6], main="", las=1)
abline( v=c( data[rownames(data)=="dic2", i], data[rownames(data)=="silur", i]), col=c("blue","red") , lwd=2)
par(mfrow=c(4,4), mar=c(4,3,1,1))
for(i in c( intersect(NOT, BLUP), intersect(NOT, BEQ11) )   ){
hist( data[,i]  ,  border=F, xlab="" , col=my_colors[6], main="", las=1)
abline( v=c( data[rownames(data)=="dic2", i], data[rownames(data)=="silur", i]), col=c("blue","red") , lwd=2)
a=gsub("_rep1", "", colnames(data)[i])
a=paste(a, " | ", round(mean(data[,i],na.rm=T),2), sep="")
title( a , col.main="blue" , cex.main=0.7)
}
for(i in c( intersect(NOT, BLUP), intersect(NOT, BEQ11) )[1]   ){
hist( data[,i]  ,  border=F, xlab="" , col=my_colors[6], main="", las=1)
abline( v=c( data[rownames(data)=="dic2", i], data[rownames(data)=="silur", i]), col=c("blue","red") , lwd=2)
a=gsub("_rep1", "", colnames(data)[i])
a=paste(a, " | ", round(mean(data[,i],na.rm=T),2), sep="")
title( a , col.main="blue" , cex.main=0.7)
}
